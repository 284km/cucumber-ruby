module Cucumber
  module Parser
    # TIP: When you hack on the grammar, just delete py_string.rb in this directory.
    # Also make sure you have uninstalled all cucumber gems (don't forget xxx-cucumber
    # github gems).
    #
    # Treetop will then generate the parser in-memory. When you're happy, just generate
    # the rb file with tt feature.tt
    grammar PyString
      include Common

      rule py_string
        open_py_string s:(!close_py_string .)* close_py_string {
          def at_line?(line)
            line >= open_py_string.line && line <= close_py_string.line
          end

          def build(ignored_filter=nil)
            Ast::PyString.new(value)
          end
  
          def value
            quotes_indent = open_py_string.indentation
            body = s.text_value.gsub(/\\"/, '"')
            # Assume all whitespace before the first triple quote is the same.
            # Also assume the contents of the pystring is indented with the same prefix.
            # This allows indentation with both " " and "\t" characters.
            return body if quotes_indent == ""
            body.gsub(/^#{quotes_indent[0..0]}{0,#{quotes_indent.length}}/, "")
          end
  
          def emit(builder, filter=nil)
            builder.py_string(value, open_py_string.line)
          end
        }
      end

      rule open_py_string
        indent:space* '"""' space* eol {
          def indentation
            indent.text_value
          end

          def line
            indent.line
          end
        }
      end

      rule close_py_string
        eol space* quotes:'"""' white {
          def line
            quotes.line
          end
        }
      end
    end
  end
end